" Ryan Pineo's .vimrc file
" Inspired by Gary Bernhardt's .vimrc
" vim:set ts=2 sts=2 sw=2 expandtab:

source ~/.vim/plugins.vim
runtime macros/matchit.vim


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" BASIC EDITING CONFIGURATION
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set hidden
" show line numbers
set number
set autoindent
" always show the status line
set laststatus=2
let mapleader=" "
set backspace=indent,eol,start
set wildmode=longest,list
" enable tab completion for buffers/files/etc
set wildmenu
filetype plugin indent on
" don't store any backups
set nobackup
set nowritebackup
set noswapfile
" if a file is changed outside vim then reload it without asking
set autoread
set formatoptions=crqjl
set scrolloff=3
set undofile
set undodir=$HOME/.vim/tmp/undo
silent! call system('mkdir -p ' . &undodir)
set list
set listchars=tab:→\ ,trail:·,extends:↷,precedes:↶
set softtabstop=4 tabstop=4 expandtab shiftwidth=4


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MISC MAPPINGS
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Fast move around windows
nnoremap <c-h> <c-w><c-h>
nnoremap <c-j> <c-w><c-j>
nnoremap <c-k> <c-w><c-k>
nnoremap <c-l> <c-w><c-l>

" open a file explorer in the current file's directory
nnoremap <leader>E :Explore<cr>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" COLORS
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax on
set background=light
colorscheme solarized


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" SEARCHING
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" make searches case sensitive only if they contain upper-case characters
set ignorecase smartcase
set incsearch
set grepprg=rg\ --vimgrep\ --smart-case


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" PLUGIN CONFIGURATION
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" EMMET
let g:user_emmet_leader_key='<c-e>'

" FZF
nnoremap <leader>f :FZF!<cr>

" INSTANT MARKDOWN
let g:instant_markdown_slow = 1
let g:instant_markdown_autostart = 0

" JEDI
let g:jedi#popup_on_dot=0
let g:jedi#popup_select_first=0
let g:jedi#auto_vim_configuration=0
let g:jedi#use_tabs_not_buffers=0
let g:jedi#goto_assignments_command="[<C-d>"
let g:jedi#goto_definitions_command="[d"
let g:jedi#documentation_command="K"
let g:jedi#usages_command="<leader>n"
let g:jedi#completions_command="<Nop>"
let g:jedi#rename_command="<Nop>"

" JSX
let g:jsx_ext_required=0

" NEOCOMPLETE
let g:neocomplete#enable_at_startup=1
let g:neocomplete#enable_smart_case=1
let g:neocomplete#sources#syntax#min_keyword_length=3
let g:neocomplete#lock_buffer_name_pattern='\*ku\*'
" Define keyword.
if !exists('g:neocomplete#keyword_patterns')
    let g:neocomplete#keyword_patterns={}
endif
let g:neocomplete#keyword_patterns['default']='\h\w*'
" <TAB>: completion.
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<S-TAB>"
inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
function! s:my_cr_function()
    return neocomplete#close_popup() . "\<CR>"
endfunction
if !exists('g:neocomplete#force_omni_input_patterns')
    let g:neocomplete#force_omni_input_patterns={}
endif
let g:neocomplete#force_omni_input_patterns.python='\%([^. \t]\.\|^\s*@\|^from\s.\+\|^\s*from\s.\+import .*\)\w*'
let g:neocomplete#force_omni_input_patterns.typescript = '[^. *\t]\.\w*\|\h\w*::'

" TSUQUYOMI
let g:tsuquyomi_disable_quickfix = 1

" ULTISNIPS
let g:UltiSnipsExpandTrigger="<c-f>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-k>"
